<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing"">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbPlayer.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RU5ErkJggg==
</value>
  </data>
</root>